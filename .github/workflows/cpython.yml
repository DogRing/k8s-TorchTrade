name:
on:
  push:
    branches: [ main,cpython ]
    paths:
      - "train/target_cpython/**"
      - "!train/target_cpython/**.yaml"
      - "!train/target_cpython/**.yml" 
  pull_request:
    branches: [ main,cpython ]
    paths:
      - "train/target_cpython/**"
      - "!train/target_cpython/**.yaml"
      - "!train/target_cpython/**.yml" 

env:
  IMAGE_NAME: dogring/tt-period
  IMAGE_TAG: 0.3
  WORKSPACE: train/target_cpython

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint bandit flake8
      
      - name: Run Pylint
        run: |
          pylint ${{ env.WORKSPACE }}/*.py || true
      
      - name: Run Bandit
        run: |
          bandit -r ${{ env.WORKSPACE }}/. || true
      
      - name: Run Flake8
        run: |
          flake8 ${{ env.WORKSPACE }}/. || true

  build:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - run: echo "The Job was triggered by ${{ github.event_name }}"
      - run: echo "This Job is running on ${{ runner.os }}"
      - run: echo "The name of branch is ${{ github.ref }} and repository is ${{ github.repository }}"

      - name: Checkout source code
        uses: actions/checkout@v4

      - run: ls ${{ github.workspace }}
      - run: echo "Job's status ${{job.status}}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.WORKSPACE }}
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Pull Docker image
        run: docker pull ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Verify image
        run: docker images

      - name: Inspect image
        run: docker inspect ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Print job status
        run: echo "Job's status ${{ job.status }}"